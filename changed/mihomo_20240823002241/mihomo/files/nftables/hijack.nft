#!/usr/sbin/nft -f

table inet mihomo {
	set dns_hijack_nfproto {
		type nf_proto
		flags interval
	}

	set proxy_nfproto {
		type nf_proto
		flags interval
	}

	set china_ip {
		type ipv4_addr
		flags interval
	}

	set china_ip6 {
		type ipv6_addr
		flags interval
	}

	set reserved_ip {
		type ipv4_addr
		flags interval
		auto-merge
		elements = {
			0.0.0.0/8,
			10.0.0.0/8,
			127.0.0.0/8,
			100.64.0.0/10,
			169.254.0.0/16,
			172.16.0.0/12,
			192.168.0.0/16,
			224.0.0.0/4,
			240.0.0.0/4
		}
	}

	set reserved_ip6 {
		type ipv6_addr
		flags interval
		auto-merge
		elements = {
			::/128,
			::1/128,
			::ffff:0:0/96,
			100::/64,
			64:ff9b::/96,
			2001::/32,
			2001:10::/28,
			2001:20::/28,
			2001:db8::/32,
			2002::/16,
			fc00::/7,
			fe80::/10,
			ff00::/8
		}
	}

	set wan_ip {
		type ipv4_addr
		flags interval
		auto-merge
	}

	set wan_ip6 {
		type ipv6_addr
		flags interval
		auto-merge
	}

	set fake_ip {
		type ipv4_addr
		flags interval
	}

	set acl_dport {
		type inet_proto . inet_service
		flags interval
		auto-merge
	}

	set acl_ip {
		type ipv4_addr
		flags interval
		auto-merge
	}

	set acl_ip6 {
		type ipv6_addr
		flags interval
		auto-merge
	}

	set acl_mac {
		type ether_addr
		flags interval
		auto-merge
	}

	chain router_dns_hijack {
		meta nfproto @dns_hijack_nfproto meta l4proto { tcp, udp } th dport 53 oifname lo meta skuid != $MIHOMO_USER counter redirect to :$DNS_PORT
	}

	chain all_dns_hijack {
		meta nfproto @dns_hijack_nfproto meta l4proto { tcp, udp } th dport 53 counter redirect to :$DNS_PORT
	}

	chain allow_dns_hijack {
		meta nfproto @dns_hijack_nfproto meta l4proto { tcp, udp } th dport 53 ip saddr @acl_ip counter redirect to :$DNS_PORT
		meta nfproto @dns_hijack_nfproto meta l4proto { tcp, udp } th dport 53 ip6 saddr @acl_ip6 counter redirect to :$DNS_PORT
		meta nfproto @dns_hijack_nfproto meta l4proto { tcp, udp } th dport 53 ether saddr @acl_mac counter redirect to :$DNS_PORT
	}

	chain block_dns_hijack {
		meta nfproto @dns_hijack_nfproto meta l4proto { tcp, udp } th dport 53 ip saddr @acl_ip counter return
		meta nfproto @dns_hijack_nfproto meta l4proto { tcp, udp } th dport 53 ip6 saddr @acl_ip6 counter return
		meta nfproto @dns_hijack_nfproto meta l4proto { tcp, udp } th dport 53 ether saddr @acl_mac counter return
		meta nfproto @dns_hijack_nfproto meta l4proto { tcp, udp } th dport 53 counter redirect to :$DNS_PORT
	}

	chain all_tproxy {
		meta nfproto @proxy_nfproto meta l4proto { tcp, udp } meta mark set mark xor $FW_MARK tproxy to :$TPROXY_PORT counter accept
	}

	chain allow_tproxy {
		meta nfproto @proxy_nfproto meta l4proto { tcp, udp } ip saddr @acl_ip meta mark set mark xor $FW_MARK tproxy ip to :$TPROXY_PORT counter accept
		meta nfproto @proxy_nfproto meta l4proto { tcp, udp } ip6 saddr @acl_ip6 meta mark set mark xor $FW_MARK tproxy ip6 to :$TPROXY_PORT counter accept
		meta nfproto @proxy_nfproto meta l4proto { tcp, udp } ether saddr @acl_mac meta mark set mark xor $FW_MARK tproxy to :$TPROXY_PORT counter accept
	}

	chain block_tproxy {
		meta nfproto @proxy_nfproto meta l4proto { tcp, udp } ip saddr @acl_ip counter return
		meta nfproto @proxy_nfproto meta l4proto { tcp, udp } ip6 saddr @acl_ip6 counter return
		meta nfproto @proxy_nfproto meta l4proto { tcp, udp } ether saddr @acl_mac counter return
		meta nfproto @proxy_nfproto meta l4proto { tcp, udp } meta mark set mark xor $FW_MARK tproxy to :$TPROXY_PORT counter accept
	}

	chain all_tun {
		meta nfproto @proxy_nfproto meta l4proto { tcp, udp } meta mark set mark xor $FW_MARK counter
	}

	chain allow_tun {
		meta nfproto @proxy_nfproto meta l4proto { tcp, udp } ip saddr @acl_ip meta mark set mark xor $FW_MARK counter
		meta nfproto @proxy_nfproto meta l4proto { tcp, udp } ip6 saddr @acl_ip6 meta mark set mark xor $FW_MARK counter
		meta nfproto @proxy_nfproto meta l4proto { tcp, udp } ether saddr @acl_mac meta mark set mark xor $FW_MARK counter
	}

	chain block_tun {
		meta nfproto @proxy_nfproto meta l4proto { tcp, udp } ip saddr @acl_ip counter return
		meta nfproto @proxy_nfproto meta l4proto { tcp, udp } ip6 saddr @acl_ip6 counter return
		meta nfproto @proxy_nfproto meta l4proto { tcp, udp } ether saddr @acl_mac counter return
		meta nfproto @proxy_nfproto meta l4proto { tcp, udp } meta mark set mark xor $FW_MARK counter
	}

	chain router_reroute {
		meta nfproto @proxy_nfproto meta l4proto { tcp, udp } meta mark set mark xor $FW_MARK counter accept
	}

	chain dstnat {
		type nat hook prerouting priority dstnat + 1; policy accept;
	}

	chain nat_output {
		type nat hook output priority filter; policy accept;
	}

	chain mangle_prerouting {
		type filter hook prerouting priority mangle; policy accept;
		meta nfproto @proxy_nfproto meta l4proto { tcp, udp } iifname lo meta mark $FW_MARK tproxy to :$TPROXY_PORT counter accept comment "For Router TPROXY"
		meta nfproto @proxy_nfproto meta l4proto { tcp, udp } iifname $TUN_DEVICE meta mark $FW_MARK counter return comment "For Router TUN"
		ip daddr @reserved_ip counter return
		ip6 daddr @reserved_ip6 counter return
		ip daddr @wan_ip counter return
		ip6 daddr @wan_ip6 counter return
		ct reply ip saddr @wan_ip counter return
		ct reply ip6 saddr @wan_ip6 counter return
		ip daddr @china_ip counter return
		ip6 daddr @china_ip6 counter return
		meta l4proto . th dport != @acl_dport ip daddr != @fake_ip counter return
		meta nfproto ipv6 meta l4proto . th dport != @acl_dport counter return
		meta l4proto { tcp, udp } th dport 53 counter return
	}

	chain mangle_output {
		type route hook output priority mangle; policy accept;
		meta skuid $MIHOMO_USER counter return
		ip daddr @reserved_ip counter return
		ip6 daddr @reserved_ip6 counter return
		ip daddr @wan_ip counter return
		ip6 daddr @wan_ip6 counter return
		ct reply ip saddr @wan_ip counter return
		ct reply ip6 saddr @wan_ip6 counter return
		ip daddr @china_ip counter return
		ip6 daddr @china_ip6 counter return
		meta l4proto . th dport != @acl_dport ip daddr != @fake_ip counter return
		meta nfproto ipv6 meta l4proto . th dport != @acl_dport counter return
		meta l4proto { tcp, udp } th dport 53 counter return
	}
}
